# -*- coding: utf-8 -*-
"""Head_or_Tail.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qWONH1Y3uaB0pmMp4pWTh2T3eXmzEVMi
"""

import pandas as pd

# I didnt write the position on the excel
# Because of it I am creating it in here
index_range_0 = list(range(0, 35))
index_range_1 = list(range(35, 70))
index_range_2 = list(range(70, 104))

# Create a DataFrame
df = pd.DataFrame({'Inıtıal': [0] * len(index_range_0) + [1] * len(index_range_1) + [2] * len(index_range_2)},
                  index=index_range_0 + index_range_1 + index_range_2)

data = pd.read_csv('/content/CoinData.csv',sep= ';')

Alldata = pd.concat([data,df],axis=1)

X = Alldata.drop(['Position','image'],axis=1)
y = Alldata['Position']

import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score
from keras.models import Sequential
from keras.layers import Dense, Dropout

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=53)

# Standardize the input
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# neural network model
model = Sequential()
model.add(Dense(8, input_dim=3, activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(8, activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(4, activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(4, activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(1, activation='sigmoid'))

# Compile
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train
model.fit(X_train, y_train, epochs=30, batch_size=6)

# Evaluate
y_pred = (model.predict(X_test) > 0.5).astype(int)
accuracy = accuracy_score(y_test, y_pred)
print(f"Test Accuracy: {accuracy * 100:.2f}%")